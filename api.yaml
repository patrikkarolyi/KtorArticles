swagger: "2.0"
info:
  description: "Some brief description."
  version: "1.0.0"
  title: "MyForum"
  contact:
    email: "patrikkarolyi@hotmail.com"
host: "myforum"
basePath: "/v1"
tags:
- name: "forum"
  description: "Access to Forum"
- name: "author"
  description: "Operations about author"
schemes:
- "https"
paths:
  /forum/article:
    get:
      tags:
      - "forum"
      summary: "List all articles"
      description: "none"
      operationId: "getArticles"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            type: "object"
            additionalProperties:
              type: "integer"
              format: "int32"
    post:
      tags:
      - "forum"
      summary: "Create an article"
      description: "none"
      operationId: "createArticle"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "article for creation"
        required: true
        schema:
          $ref: '#/definitions/Article'
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Article"
        400:
          description: "Invalid Article"
  /forum/article/{articleId}:
    get:
      tags:
      - "forum"
      summary: "Search article by Id"
      description: "none"
      operationId: "getArticle"
      produces:
      - "application/json"
      parameters:
      - name: "articleId"
        in: "path"
        description: "none"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: '#/definitions/Article'
        400:
          description: "Invalid username supplied"
        404:
          description: "User not found"
  /author:
    post:
      tags:
      - "author"
      summary: "Create an author"
      description: "none"
      operationId: "createAuthor"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created author object"
        required: true
        schema:
          $ref: "#/definitions/Author"
      responses:
        default:
          description: "successful operation"
  /author/login:
    get:
      tags:
      - "author"
      summary: "Logs author into the system"
      description: ""
      operationId: "loginUser"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "username"
        in: "query"
        description: "The user name for login"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "string"
          headers:
            X-Rate-Limit:
              type: "integer"
              format: "int32"
              description: "calls per hour allowed by the user"
            X-Expires-After:
              type: "string"
              format: "date-time"
              description: "date in UTC when token expires"
        400:
          description: "Invalid username/password supplied"
  /author/{authorId}:
    get:
      tags:
      - "author"
      summary: "Get author by user name"
      description: ""
      operationId: "getAuthorById"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "authorId"
        in: "path"
        description: "none"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: '#/definitions/Author'
        400:
          description: "Invalid username supplied"
        404:
          description: "User not found"
    put:
      tags:
      - "author"
      summary: "Updated author"
      description: "none"
      operationId: "updateUser"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "authorId"
        in: "path"
        description: "none"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Updated user object"
        required: true
        schema:
          $ref: '#/definitions/Author'
      responses:
        400:
          description: "Invalid user supplied"
        404:
          description: "User not found"
    delete:
      tags:
      - "author"
      summary: "Delete author"
      description: "none"
      operationId: "deleteAuthor"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "authorId"
        in: "path"
        description: "none"
        required: true
        type: "string"
      responses:
        400:
          description: "Invalid username supplied"
        404:
          description: "User not found"
definitions:
  Article:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      authorId:
        type: "integer"
        format: "int64"
      publicationDate:
        type: "string"
        format: "date-time"
      topic:
        type: "string"
        description: "Post topic"
        enum:
        - "echnology"
        - "Biology"
        - "Physics"
        - "Matemathics"
    xml:
      name: "Article"
  Author:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      username:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
    xml:
      name: "User"
